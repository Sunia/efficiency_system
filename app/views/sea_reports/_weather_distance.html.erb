<%= render 'weather_distances/weather_and_distance' %>

<script> 

  // Delete the row
  function deleteRow(btn) {
    var row = btn.parentNode.parentNode;
    row.parentNode.removeChild(row);
  }


  function last_observation_same_as_close_sea_passage(){

    smt = add_observation_smt_from_close_report_smt();
    utc_4_hr_forward = smt.toUTCString(); 

    first_data = make_row_for_first_table(smt, utc_4_hr_forward);
    second_data = make_row_for_second_table;

    // $('#weather_first_table tr:last').after(first_data);
    $('.first_table_values').last().after(first_data);
    $('#second_weather_table tr:last').after(second_data);
  }  

  // Add new waypoint on the list of passage plan
  $( "#new_weather_observation" ).on( "click", function( event ) {

    smt = add_observation_smt_to_4_hours();
    utc_4_hr_forward = smt.toUTCString(); 

    first_data = make_row_for_first_table(smt, utc_4_hr_forward);
    second_data = make_row_for_second_table;

    // $('#weather_first_table tr:last').after(first_data);
    $('.first_table_values').last().after(first_data);
    $('#second_weather_table tr:last').after(second_data);
  });


  // Make new row for the first table.
  function make_row_for_first_table(smt, utc_4_hr_forward) {

    data = '<tr class="first_table_values">'
    
    // Datetime of the SMT.
    // smts = $('.observation_smt')
    // smt_time = smts.last()[0].value
    // smt_time = new Date(smt_time)
    // smt_time.setHours(smt.getHours() + 4);

    // utc_4_hr_forward = smt.toUTCString();

    //############################################################


    // SMT
    data += '<td><input type="text" name="weather[][observation_smt]" id="weather__observation_smt" value="' +smt_time + '" required="required" style="width: 148px;" class="observation_smt" readonly="readonly"></td> '

    // UTC
    data += '<td><input type="text" name="weather[][observation_utc]" id="weather__observation_utc" value="'+ utc_4_hr_forward.slice(0,-4) +'" required="required" style="width: 164px" class="observation_utc" readonly="readonly"></td> '

    // ME Power
    data +=	'<td><input type="number" name="weather[][me_power]" id="weather__me_power" required="required" style="width: 92px;" class="me_power" min="0" max="999999999"></td>'

    // ME RPM
	 data +=  '<td> <input type="number" name="weather[][me_rpm]" id="weather__me_rpm" required="required" style="width: 52px;" min="0" max="9999" step="0.01"></td>'

    // Speed knots
     data += '<td><input type="number" name="weather[][speed_knots]" id="weather__speed_knots" required="required" step="0.01" min="0.00" max="99.99" style="width: 60px;"></td>'

    // Speed observed knots 
    data += '<td><input type="number" name="weather[][speed_observed_knots]" id="weather__speed_observed_knots" required="required" step="0.01" min="0.00" max="99.99" style="width: 68px;"></td>'

   // Trip Counter log
    data +='<td><input type="number" name="weather[][trip_counter_log]" id="weather__trip_counter_log" required="required" style="width: 52px;" min="0" max="99999.99" step="0.01"></td>'

    // Trip Counter gps
    data += '<td><input type="number" name="weather[][trip_counter_gps]" id="weather__trip_counter_gps" required="required" style="width: 52px;" min="0" max="99999.99" step="0.01"></td>'
    
    // Distance remaining to EOSP
    data += '<td><input type="number" name="weather[][distance_rem_eosp]" id="weather__distance_rem_eosp" required="required" style="width: 56px;" min="0" max="99999.99" step="0.01"></td>'

    // Time remaining to EOSP
    data += '<td><input type="number" name="weather[][time_rem_eosp]" id="weather__time_rem_eosp" required="required" style="width: 64px;" min="0" max="9999.99" step="0.01"></td>'

    // Avg Rudder Angle
    data += '<td><input type="number" name="weather[][avg_rudder_angle]" id="weather__avg_rudder_angle" required="required" style="width: 48px;" class="avg_rudder_angle" min="0" max="99"></td>'


    // Delete image
    data += "<td><img src='/assets/delete.png' style='height: 10%;' onClick='deleteRow(this)'> </td>"

    data += '</tr>'
    return data;
  }


  // Make new row for the second table 
  function make_row_for_second_table() {

    data = '<tr>'

    // Position
    // LAtitude
    data += '<td style="width: 220px;">'
      // latitude degree
    data += '<input type="number" name="position[][lat_degree]" id="position__lat_degree" required="required" min="0" max="90" style="width: 40px;" class="padding-0-col">'
      
      // latitude min
      data+=  '<input type="number" name="position[][lat_min]" id="position__lat_min" required="required" step="0.01" min="0.00" max="59.99" style="width: 40px;" class="padding-0-col">'

      // latitude dir
      data+= '<select name="position[][lat_dir]" style="width: 30px;height: 23px; font-size:10px;" class="padding-0-col"><option value="N">N</option><option value="S">S</option></select>'

      // long degree
      data += '<input type="number" name="position[][long_degree]" id="position__long_degree" required="required" min="0" max="90" style="width: 40px;" class="padding-0-col">'

      // long min
      data += '<input type="number" name="position[][long_min]" id="position__long_min" required="required" step="0.01" min="0.00" max="59.99" style="width: 40px;" class="padding-0-col">'

      // long_dir
      data += '<select name="position[][long_dir]" style="width: 30px;height: 23px; font-size:10px;" class="padding-0-col"><option value="W">W</option><option value="E">E</option></select></td>'
      // End of position

      // True wind force(BF)
      data += '<td><input type="number" name="weather_second[][true_wind_force]" id="weather__true_wind_force" required="required" style="width: 76px;" min="0" max="99"></td>'

      // True wind direction
      data += '<td><input type="number" name="weather_second[][true_wind_dir]" id="weather__true_wind_dir" required="required" style="width: 60px;" min="000" max="359"></td>'

      // True wind speed in Knots
      data += '<td><input type="number" name="weather_second[][true_wind_speed_knots]" id="weather__true_wind_speed_knots" required="required" style="width: 48px;" min="0" max="100"></td>'

      // Wave height in meters(Seas)
      data += '<td><input type="number" name="weather_second[][wave_height]" id="weather__wave_height" required="required" style="width: 60px;" min="0" max="100"></td>'

      //True Swell Direction (0-359 degrees)
      data += '<td><input type="number" name="weather_second[][true_swell_direction]" id="weather__true_swell_direction" required="required" style="width: 76px;" min="000" max="359"></td>'

      // True Swell height in meters
     data += '<td><input type="number" name="weather_second[][true_swell_height]" id="weather__true_swell_height" required="required" style="width: 60px;" min="0" max="100"></td>'

    // Water depth in meters
    data += '<td><input type="number" name="weather_second[][water_depth]" id="weather__water_depth" required="required" style="width: 52px;" min="0" max="10000"></td>'    

    // Couse over ground (0-359)
    data += '<td><input type="number" name="weather_second[][couse_over_ground]" id="weather__couse_over_ground" required="required" style="width: 44px;" min="000" max="359"></td>'

    // Gyro course (0-359)
    data += '<td><input type="number" name="weather_second[][gyro_course]" id="weather__gyro_course" required="required" style="width: 44px;" min="000" max="359"></td>'

    // Compass course (0-359)
    data += '<td><input type="number" name="weather_second[][compass_course]" id="weather__compass_course" required="required" style="width: 48px;" min="000" max="359"></td>'

    // Reliable Observation
    data += '<td><select name="weather_second[][reliable_observation]" style="width: 60px;font-size: 10px; height: 23px;"><option value="Reliable">Yes</option><option value="Non-Reliable">No</option></select></td>'

    // Delete image
    data += "<td><img src='/assets/delete.png' style='height: 10%;' onClick='deleteRow(this)'> </td>"

    data += '</tr>'
    return data;

  }

  function add_observation_smt_to_4_hours(){

    smt_time = $('.observation_smt').last()[0].value

    smtArr = smt_time.split(String.fromCharCode(32));
    yr = smtArr[0]
    time = smtArr[1]
    zone = smtArr[2]

    old_hr = parseInt(time.split(":")[0])
    minutes = parseInt(time.split(":")[0])
    seconds = parseInt(time.split(":")[0])

    if(old_hr < 4 && old_hr > 0){new_hr = 4 }
    else if(old_hr < 8 && old_hr > 4){new_hr = 8 }
    else if(old_hr < 12 && old_hr > 8){new_hr = 12 }
    else if(old_hr < 16 && old_hr > 12){new_hr = 16 }
    else if(old_hr < 20 && old_hr > 16){new_hr = 20 }
    else if(old_hr <= 24 && old_hr > 20){new_hr = 24 }
    else{ new_hr = old_hr + 4}

    if(new_hr < 10){new_hr = "0" + new_hr}
    if(minutes < 10){minutes = "0" + minutes}
    if(seconds < 10){seconds = "0" + seconds}

    if(new_hr > 20){
      new_hr = "00"

      year = parseInt(yr.split("-")[0])  
      is_leap = new Date(year, 1, 29).getMonth() == 1

      month = parseInt(yr.split("-")[1])  
      day = parseInt(yr.split("-")[2])


      if(day == 30 && month == 4 || month == 6 || month == 9 || month == 11){
        month = month + 1
        day = 1
      }
      else if(is_leap && month == 2 && day == 29){
        month = month + 1
        day = 1
      }
      else if(is_leap && month == 2 && day == 28){
        day = day + 1
      }
      else if(!is_leap && month == 2 && day == 28){
        month = month + 1
        day = day +1
      }
      else if(day == 31 && month == 1 || month == 3 || month == 5 || 
        month == 7 || 
        month == 8 || month == 10 || month == 12 ){
        day = 1
        month = month + 1
      }
      else{
        day = day + 1
      }

      if(month >= 12){
        year = year + 1
        month = 1
      }

      if(month < 10 ){ month = "0" + month}
      if(day < 10){day = "0" + day} 
      yr = year + "-" + month + "-" + day
    }
    
    time = new_hr + ":"+ "00" + ":" + "00"
    smt_time = yr + " " + time + " " + zone

    smt = new Date(smt_time)
    return smt;
  }

  function add_observation_smt_from_close_report_smt(){
    
    yr = $("#date_close_report")[0].value
    old_hr = $(".close_hours")[0].value
    minutes = $(".close_min")[0].value
    seconds = $(".close_sec")[0].value

    time = old_hr + ":" + minutes + ":" + seconds

    zone = $("#sea_report_zone_time")[0].value

    smt_time = yr + " " + time + " " + zone

    smt = new Date(smt_time)
    return smt;
  }


</script>