<!-- To display new passage plan on edit of sea report-->

<%= render 'operating_conditions/operating_conditions' %>


<!-- Javascript -->
<script>

    // Calculate load visual trim
    $("#operating_condition_visual_aft").bind("change", function(e){
      calculate_visual_trim();
    });

    $("#operating_condition_visual_fwd").bind("change", function(e){
      calculate_visual_trim();
    });

    function calculate_visual_trim(){
      visual_aft = $("#operating_condition_visual_aft")[0].value;
      visual_fwd = $("#operating_condition_visual_fwd")[0].value;

      if (visual_fwd == ""){
        alert("Please fill the visual fwd first");
      }
      else {
        visual_trim = visual_aft - visual_fwd;
        $("#operating_condition_visual_trim")[0].value = visual_trim.toFixed(2);
      }
     }

    // Calculate load departure trim
    $("#operating_condition_load_dep_aft").bind("change", function(e){
      calculate_load_dep_trim();
    });

    $("#operating_condition_load_dep_fwd").bind("change", function(e){
      calculate_load_dep_trim();
    });

    function calculate_load_dep_trim(){
      aft = $("#operating_condition_load_dep_aft")[0].value;
      fwd = $("#operating_condition_load_dep_fwd")[0].value;

      if (fwd == ""){
        alert("Please fill the 'Load Departure fwd' first");
      }
      else {
        trim = aft - fwd;
        $("#operating_condition_load_dep_trim")[0].value = trim.toFixed(2);
      }      
    }

    // Calculate load daily trim
    // $('.filter-btn-ser').on('click', function(){
    $('#operating_condition_load_daily_aft').change(function(){
    // $("#operating_condition_load_daily_aft").bind("change", function(e){
      calculate_load_daily_trim();
    });

    $("#operating_condition_load_daily_fwd").bind("change", function(e){
      calculate_load_daily_trim();
    });

    function calculate_load_daily_trim(){
      aft = $("#operating_condition_load_daily_aft")[0].value;
      fwd = $("#operating_condition_load_daily_fwd")[0].value;

      if (fwd == ""){
        alert("Please fill the 'Load Daily fwd' first");
      }
      else {
        trim = aft - fwd;
        $("#operating_condition_load_daily_trim")[0].value = trim.toFixed(2);
      }      
    }

  // Speed log calibration date

  function check_overdue_for_speed_and_torsion(){
    calculate_speed_log_date();
    calculate_torsion_meter_date();
  }

  // $("#speed_log_date").on('click', function(){
  // $("#speed_log_date").bind("change", function(e){ 
  // });
  $('.startDate').on('changeDate', function(ev){
      $('.datepicker').hide();
      calculate_speed_log_date();
  });


  $("#torsion_meter_date").on('changeDate', function(ev){
    $('.datepicker').hide();
    calculate_torsion_meter_date();

  });

  function calculate_speed_log_date(){
    speed_log_date = $("#speed_log_date")[0].value;

    log_date = new Date(speed_log_date);
    today = new Date();

    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds

    var diffDays = Math.round(Math.abs((today.getTime() - log_date.getTime())/(oneDay)))

    if(diffDays > 90){
      due_days = diffDays - 90
      alert("Speed log calibration is overdue by " + due_days +  " days");
    }  
  }

  function calculate_torsion_meter_date(){
    torsion_meter_date = $("#torsion_meter_date")[0].value;

    log_date = new Date(torsion_meter_date);
    today = new Date();

    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds

    var diffDays = Math.round(Math.abs((today.getTime() - log_date.getTime())/(oneDay)))

    if(diffDays > 90){
      due_days = diffDays - 90
      alert("Torsion meter Calibration Date is overdue by " + due_days +  " days");
    }  
  }



</script>